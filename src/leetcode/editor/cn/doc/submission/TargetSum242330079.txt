class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        for(int n : nums) {
            sum += n;
        }
        return sum < target || (target + sum) % 2 > 0 ? 0 : subsetSum(nums, (target + sum)/2);
    }

    public int subsetSum(int[] nums, int target) {
        if (target < 0) return 0;
        int[] dp = new int[target+1];
        dp[0] = 1;
        for (int i = 0; i < nums.length; i++) {
            for (int j = target; j >= nums[i]; j--) {
                dp[j] = dp[j] + dp[j-nums[i]];
            }
        }
        return dp[target];
    }
}

//runtime:2 ms
//memory:36.1 MB
