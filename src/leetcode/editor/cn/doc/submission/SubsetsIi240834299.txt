class Solution {
    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);
        result.add(new ArrayList<>());
        List<Integer> str = new ArrayList<>();
        dfs(nums, str,0);
        return result;
    }

    public void dfs(int[] nums, List<Integer> str, int index) {
        for(int i = index; i < nums.length; i++) {
            if (i != index && nums[i] == nums[i-1]) continue;
            str.add(nums[i]);
            result.add(new ArrayList<>(str));
            dfs(nums, str, i+1);
            str.remove(str.size()-1);
        }
    }
}

//runtime:0 ms
//memory:38.6 MB
